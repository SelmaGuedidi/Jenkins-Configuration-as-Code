jenkins:
  systemMessage: "Welcome to Jenkins"
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "admin"
        - id: "user1"
          password: "password1"
        - id: "user2"
          password: "password2"
  nodes:
    - permanent:
        name: "static-agent1"
        remoteFS: "/home/jenkins"
        launcher:
          inbound:
            workDirSettings:
              disabled: true
              failIfWorkDirIsMissing: false
              internalDir: "remoting"
              workDirPath: "/tmp"
    - permanent:
        name: "static-agent2"
        remoteFS: "/home/jenkins"
        launcher:
          inbound:
            workDirSettings:
              disabled: true
              failIfWorkDirIsMissing: false
              internalDir: "remoting"
              workDirPath: "/tmp"
  clouds:
    - kubernetes:
        name: "minikube"
        skipTlsVerify: true
        namespace: "default"
        jenkinsUrl: "http://localhost:8080"
        templates:
        - name: "jnlp"
          label: "mypod"
          containers:
            - name: "jnlp"
              image: jenkins/inbound-agent:latest
              privileged: 'false'
              ttyEnabled: 'false'
              workingDir: /home/jenkins/agent
        - name: "powershell"
          label: "powershell"
          containers:
            - name: "powershell" 
              image: jenkins/jnlp-agent-powershell:latest
              privileged: 'false'
              ttyEnabled: 'false'
              workingDir: /home/jenkins/agent  

  authorizationStrategy:
    folderBased:
      agentRoles:
        - agents:
            - "agent1"
          name: "agentRole1"
          permissions:
            - id: "Agent/Configure"
            - id: "Agent/Disconnect"
          sids:
            - "user1"
      folderRoles:
        - folders:
            - "user1-folder"
          name: "user1Role"
          permissions:
            - id: "Job/Read"
            - id: "Job/Build"
            - id: "Job/Create"
          sids:
            - "user1" 
        - folders:
            - "user2-folder"
          name: "user2Role"
          permissions:
            - id: "Job/Read"
            - id: "Job/Build"
            - id: "Job/Create"
          sids:
            - "user2"
        - folders:
            - "test-folder"
          name: "adminRole"
          permissions:
            - id: "Job/Read"
            - id: "Job/Build"
            - id: "Job/Create"
            - id: "Job/Delete"
          sids:
            - "admin"
        - folders:
            - "admin-folder"
          name: "adminRole"
          permissions:
            - id: "Job/Read"
            - id: "Job/Build"
            - id: "Job/Create"
            - id: "Job/Delete"
          sids:
            - "admin"
      globalRoles:
        - name: "admin"
          permissions:
            - id: "Overall/Administer"
          sids:
            - "admin"
        - name: "read"
          permissions:
            - id: "Overall/Read"
          sids:
            - "user1"

jobs:
  - script: >
        folder('user1-folder') {
            description('Folder for user1')
            displayName('User1 Folder')
            authorization {
                permission('hudson.model.Item.Read:user1')
                permission('hudson.model.Item.Build:user1')
                permission('hudson.model.Item.Create:user1')
                permission('hudson.model.Item.Delete:admin')
            }
        }
  - script: >
        folder('user2-folder') {
            description('Folder for user2')
            displayName('User2 Folder')
            authorization {
                permission('hudson.model.Item.Read:user2')
                permission('hudson.model.Item.Build:user2')
                permission('hudson.model.Item.Create:user2')
                permission('hudson.model.Item.Delete:admin')
            }
        }
  - script: >
        folder('admin-folder') {
            description('Folder for admin')
            displayName('Admin Folder')
            authorization {
                permission('hudson.model.Item.Read:admin')
                permission('hudson.model.Item.Build:admin')
                permission('hudson.model.Item.Create:admin')
                permission('hudson.model.Item.Delete:admin')
            }
        }

appearance:
  locale:
    systemLocale: en
    ignoreAcceptLanguage: true
